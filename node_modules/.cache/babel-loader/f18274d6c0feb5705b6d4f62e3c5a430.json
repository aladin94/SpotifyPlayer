{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admir\\\\Desktop\\\\spotify-player\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport * as $ from \"jquery\";\nimport { authEndpoint, clientId, redirectUri, scopes } from \"./config_example\";\nimport hash from \"./hash\";\nimport Player from \"./Player\";\nimport SpotifyLogo from \"./SpotifyLogo.png\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      token: null,\n      item: {\n        album: {\n          images: [{\n            url: \"\"\n          }]\n        },\n        name: \"\",\n        artists: [{\n          name: \"\"\n        }],\n        duration_ms: 0\n      },\n      is_playing: \"Paused\",\n      progress_ms: 0\n    };\n    this.getCurrentlyPlaying = this.getCurrentlyPlaying.bind(this);\n  }\n\n  componentDidMount() {\n    let _token = hash.access_token;\n\n    if (_token) {\n      this.setState({\n        token: _token\n      });\n      this.getCurrentlyPlaying(_token);\n    }\n  }\n\n  getCurrentlyPlaying(token) {\n    // Make a call using the token\n    $.ajax({\n      url: \"https://api.spotify.com/v1/me/player\",\n      type: \"GET\",\n      beforeSend: xhr => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: data => {\n        this.setState({\n          item: data.item,\n          is_playing: data.is_playing,\n          progress_ms: data.progress_ms\n        });\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: SpotifyLogo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), !this.state.token && React.createElement(\"a\", {\n      className: \"btn btn--loginApp-link\",\n      href: `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Login to your Spotify\"), this.state.token && React.createElement(Player, {\n      item: this.state.item,\n      is_playing: this.state.is_playing,\n      progress_ms: this.progress_ms,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/admir/Desktop/spotify-player/src/App.js"],"names":["React","Component","$","authEndpoint","clientId","redirectUri","scopes","hash","Player","SpotifyLogo","App","constructor","state","token","item","album","images","url","name","artists","duration_ms","is_playing","progress_ms","getCurrentlyPlaying","bind","componentDidMount","_token","access_token","setState","ajax","type","beforeSend","xhr","setRequestHeader","success","data","render","join"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport * as $ from \"jquery\";\nimport { authEndpoint, clientId, redirectUri, scopes } from \"./config_example\";\nimport hash from \"./hash\";\nimport Player from \"./Player\";\nimport SpotifyLogo from \"./SpotifyLogo.png\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      token: null,\n      item: {\n        album: {\n          images: [{ url: \"\" }]\n        },\n        name: \"\",\n        artists: [{ name: \"\" }],\n        duration_ms: 0\n      },\n      is_playing: \"Paused\",\n      progress_ms: 0\n    };\n    this.getCurrentlyPlaying = this.getCurrentlyPlaying.bind(this);\n  }\n  componentDidMount() {\n    let _token = hash.access_token;\n\n    if (_token) {\n      this.setState({\n        token: _token\n      });\n      this.getCurrentlyPlaying(_token);\n    }\n  }\n\n  getCurrentlyPlaying(token) {\n    // Make a call using the token\n    $.ajax({\n      url: \"https://api.spotify.com/v1/me/player\",\n      type: \"GET\",\n      beforeSend: xhr => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: data => {\n        this.setState({\n          item: data.item,\n          is_playing: data.is_playing,\n          progress_ms: data.progress_ms\n        });\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <img src={SpotifyLogo} className=\"App-logo\" alt=\"logo\" />\n          {!this.state.token && (\n            <a\n              className=\"btn btn--loginApp-link\"\n              href={`${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n                \"%20\"\n              )}&response_type=token&show_dialog=true`}\n            >\n              Login to your Spotify\n            </a>\n          )}\n          {this.state.token && (\n            <Player\n              item={this.state.item}\n              is_playing={this.state.is_playing}\n              progress_ms={this.progress_ms}\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}